def env = "${env.env}"
node {
    def artiServer
    def buildInfo
    def rtMaven
    
    def SONAR_SOURCES = 'maven-example/'
    def SONAR_HOST_URL = 'http://47.93.114.82:9000/'
    def SONAR_PROJECT_KEY = "${JOB_NAME}"
    
    stage('set env'){
        artiServer = Artifactory.server('artiha-demo')
        buildInfo = Artifactory.newBuildInfo()
		//buildInfo.env.capture = true
		rtMaven = Artifactory.newMavenBuild()
    }
    
    stage ('SCM') {
        git url: 'https://github.com/liwei2151284/project-examples.git'
    }

    stage ('Artifactory configuration') {
        rtMaven.tool = 'maven' // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo: 'jenkins_pipeline_webinar_stage_local', snapshotRepo: 'jenkins_pipeline_webinar_snapshot_local', server: artiServer
        rtMaven.resolver releaseRepo: 'jenkins_pipeline_webinar_release_virtual', snapshotRepo: 'jenkins_pipeline_webinar_snapshot_virtual', server: artiServer
    }

    stage ('Exec Maven') {
        rtMaven.run pom: 'maven-example/pom.xml', goals: 'clean install', buildInfo: buildInfo
    }

    stage ('Publish build info') {
        artiServer.publishBuildInfo buildInfo
    }
    
    stage('approve') {
            input message: 'tongguo', ok: 'ok'
	}
    
    stage('sonar scan'){

		// Sonar scan
        def scannerHome = tool 'sonarClient';
        withSonarQubeEnv('sonar') {
	    sh "echo ${scannerHome}"
            sh "${scannerHome}/bin/sonar-runner -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.sources=${SONAR_SOURCES}"
        }
        
    }
    
    stage('sonar result post'){
        
    }
    
    stage('xray scan'){
        
    }
    
    stage('xray result post'){
        echo "${env}"
    }
    
    stage('test'){
        sh label: '', script: 'ls'
    }
    
    stage('test result post'){
        
    }
    
    stage('promotion'){
        
    }
    
    stage('deploy'){
        
    }
    
    stage('deploy result post'){
        
    }
}
    
